# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: CI
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  Tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: 3.8.12
      - uses: syphar/restore-virtualenv@v1
        id: cnetenv
        with:
          requirement_files: setup.cfg
      - uses: syphar/restore-pip-download-cache@v1
        if: steps.cnetenv.outputs.cache-hit != 'true'
      - name: Install GDAL binaries
        run: |
          # Install GDAL
          sudo apt update && sudo apt upgrade -y && sudo apt install -y
          sudo apt install software-properties-common -y
          sudo add-apt-repository ppa:ubuntugis/ppa
          sudo apt install libmysqlclient-dev default-libmysqlclient-dev -y
          sudo apt install gdal-bin libgdal-dev libgl1 libspatialindex-dev g++ -y
          export CPLUS_INCLUDE_PATH=/usr/include/gdal
          export C_INCLUDE_PATH=/usr/include/gdal
          export LD_LIBRARY_PATH=/usr/local/lib
      - name: Install Python packages
        run: |
          # Install Python GDAL
          pip install -U pip setuptools wheel
          pip install -U Cython "numpy<=1.21.0"
          GDAL_VERSION=$(gdal-config --version | awk -F'[.]' '{print $1"."$2"."$3}')
          pip install GDAL==$GDAL_VERSION --no-binary=gdal
      - name: Install PyTorch
        run: |
          TORCH_CPU="https://download.pytorch.org/whl/cpu"
          pip install --upgrade --no-cache-dir setuptools>=0.59.5
          pip install torch torchvision torchaudio --extra-index-url $TORCH_CPU
          PYG_TORCH_CPU="https://data.pyg.org/whl/torch-1.12.0+cpu.html"
          pip install torch-scatter torch-sparse torch-cluster torch-spline-conv torch-geometric -f $PYG_TORCH_CPU
        if: steps.cnetenv.outputs.cache-hit != 'true'
      - name: Install cultionet
        run: |
          pip install .
      - name: Pytest
        run: |
          pip install pytest
          pytest

#   Version:
#     needs: Tests
#     if: github.event_name == 'push' && github.ref == 'refs/heads/main' && !contains(github.event.head_commit.message, 'chore(release):')
#     runs-on: ubuntu-latest
#     concurrency: release
#     steps:
#       - uses: actions/checkout@v2
#         with:
#           fetch-depth: 0
#           token: ${{ secrets.CULTIONET_TOKEN }}
#       - uses: actions/setup-python@v2
#         with:
#           python-version: 3.8.12
#       - name: Python Semantic Release
#         run: |
#           python -m pip install python-semantic-release
#           # Add credentials
#           git config user.name "github-actions"
#           git config user.email "github-actions@github.com"
#           # Bump cultionet version
#           semantic-release publish
#         env:
#           GH_TOKEN: ${{ secrets.CULTIONET_TOKEN }}

#   # https://github.com/fnkr/github-action-ghr
#   Release:
#     needs: Version
#     if: github.event_name == 'push' && github.ref == 'refs/heads/main' && !contains(github.event.head_commit.message, 'chore(release):')
#     name: Upload release
#     runs-on: ubuntu-latest
#     steps:
#       - uses: actions/checkout@v2
#       - uses: actions/setup-python@v2
#         with:
#           python-version: 3.8.12
#       - uses: syphar/restore-virtualenv@v1
#         id: cnetenv
#         with:
#           requirement_files: setup.cfg
#       - uses: syphar/restore-pip-download-cache@v1
#         if: steps.cnetenv.outputs.cache-hit != 'true'
#       - name: Checkout
#         uses: fnkr/github-action-ghr@v1
#         if: startsWith(github.ref, 'refs/tags/')
#         env:
#           GHR_PATH: .
#           GHR_COMPRESS: gz
#           GITHUB_TOKEN: ${{ secrets.CULTIONET_TOKEN }}
